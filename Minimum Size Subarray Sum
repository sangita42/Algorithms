Minimum Size Subarray Sum
problem statement:Given an array of positive integers nums and a positive integer target, return the minimal length of a contiguous subarray [numsl, numsl+1, ..., numsr-1, numsr]
of which the sum is greater than or equal to target. If there is no such subarray, return 0 instead.
LEETCODE
public int minSubArrayLen(int target, int[] nums) {
        int l=0,r=0;
        int n = nums.length;
        int minlength=Integer.MAX_VALUE;
            int sum=0;            

        while(r<n){
            
            while(r<n && sum<target){
                sum+=nums[r++];
            }
            while(l<n && sum>=target){
                minlength=Math.min(minlength,(r-l));
                sum-=nums[l++];
            }
            
        }
        
        return minlength==Integer.MAX_VALUE?0:minlength;
    }
